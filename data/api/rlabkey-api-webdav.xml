<ApiTests xmlns="http://labkey.org/query/xml">
    <test name="webdav.get" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("webdav.get", labkey.webdav.get(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks/getMe.txt", localFilePath="%downloadDir%/getMe.txt", overwrite=FALSE))
                c("file.exists", file.exists("%downloadDir%/getMe.txt"))
                c("file.info.isdir", file.info("%downloadDir%/getMe.txt")$isdir)
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "webdav.get" "TRUE"
                [1] "file.exists" "TRUE"
                [1] "file.info.isdir" "FALSE"
             ]]>
        </response>
    </test>
    <test name="webdav.get overwrite=TRUE" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("file.create", file.create("%downloadDir%/overwriteMe.txt"))
                c("initial size", file.info("%downloadDir%/overwriteMe.txt")$size)
                c("webdav.get", labkey.webdav.get(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks/getMe.txt", localFilePath="%downloadDir%/overwriteMe.txt", overwrite=TRUE))
                c("final size", file.info("%downloadDir%/overwriteMe.txt")$size)
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "file.create" "TRUE"
                [1] "initial size" "0"
                [1] "webdav.get" "TRUE"
                [1] "final size" "5"
             ]]>
        </response>
    </test>
    <test name="webdav.get overwrite=FALSE" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("file.create", file.create("%downloadDir%/dontOverwriteMe.txt"))
                c("initial size", file.info("%downloadDir%/dontOverwriteMe.txt")$size)
                c("webdav.get", labkey.webdav.get(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks/getMe.txt", localFilePath="%downloadDir%/dontOverwriteMe.txt", overwrite=FALSE))
                c("final size", file.info("%downloadDir%/dontOverwriteMe.txt")$size)
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "file.create" "TRUE"
                [1] "initial size" "0"
                [1] "webdav.get" "FALSE"
                [1] "final size" "0"
             ]]>
        </response>
    </test>
    <test name="webdav.get overwrite directory with file" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("dir.create", dir.create("%downloadDir%/overwriteDir"))
                c("webdav.get", tryCatch({labkey.webdav.get(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks/getMe.txt", localFilePath="%downloadDir%/overwriteDir", overwrite=TRUE)},
                    error = function(e) {e$message}))
                c("file.exists", file.exists("%downloadDir%/overwriteDir"))
                c("file.info.isdir", file.info("%downloadDir%/overwriteDir")$isdir)
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "dir.create" "TRUE"
                The local filepath exists and is a directory
                [1] "file.exists" "TRUE"
                [1] "file.info.isdir" "TRUE"
             ]]>
        </response>
    </test>
    <test name="webdav.get directory" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
               c("webdav.get",  tryCatch({labkey.webdav.get(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks/getMe", localFilePath="%downloadDir%/getMe_download", overwrite=FALSE)},
                    error = function(e) {e$message}))
                c("file.exists", file.exists("%downloadDir%/getMe_download"))
            ]]>
        </url>
        <response>
            <![CDATA[
                The requested file is a directory
                [1] "file.exists" "FALSE"
             ]]>
        </response>
    </test>
    <test name="webdav.get missing file" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("file.exists pre", file.exists("%downloadDir%/noexist.txt"))
                c("webdav.get", tryCatch({labkey.webdav.get(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks/noexist.txt", localFilePath="%downloadDir%/noexist.txt", overwrite=TRUE)},
                    error = function(e) {e$message}))
                c("file.exists post", file.exists("%downloadDir%/noexist.txt"))
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "file.exists pre" "FALSE"
                [1] "webdav.get"
                Status code = 404
                [1] "file.exists post" "FALSE"
             ]]>
        </response>
    </test>
    <test name="webdav.mkDir" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("remote file.exists pre", file.exists("%remoteDir%/writeChecks/mkDir"))
                c("webdav.mkDir", labkey.webdav.mkDir(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/writeChecks/mkDir"))
                c("remote file.exists post", file.exists("%remoteDir%/writeChecks/mkDir"))
                c("remote file.info.isdir", file.info("%remoteDir%/writeChecks/mkDir")$isdir)
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "remote file.exists pre" "FALSE"
                [1] "webdav.mkDir" "TRUE"
                [1] "remote file.exists post" "TRUE"
                [1] "remote file.info.isdir" "TRUE"
             ]]>
        </response>
    </test>
    <test name="webdav.mkDir fail too deep" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("webdav.mkDir", tryCatch({labkey.webdav.mkDir(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/writeChecks/mkDirFail/subdir")},
                    error = function(e) {e$message}))
                c("remote file.exists", file.exists("%remoteDir%/writeChecks/mkDirFail"))
            ]]>
        </url>
        <response>
            <![CDATA[
                Status code = 409
                [1] "remote file.exists" "FALSE"
             ]]>
        </response>
    </test>
    <test name="webdav.mkDirs depth 1" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("file.exists pre", file.exists("%remoteDir%/writeChecks/mkDirs1"))
                c("webdav.mkDirs", labkey.webdav.mkDirs(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/writeChecks/mkDirs1/subdir"))
                c("file.exists post", file.exists("%remoteDir%/writeChecks/mkDirs1/subdir"))
                c("file.info.isdir", file.info("%remoteDir%/writeChecks/mkDirs1/subdir")$isdir)
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "file.exists pre" "FALSE"
                [1] "webdav.mkDirs" "TRUE"
                [1] "file.exists post" "TRUE"
                [1] "file.info.isdir" "TRUE"
             ]]>
        </response>
    </test>
    <test name="webdav.mkDirs depth 2" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("file.exists pre", file.exists("%remoteDir%/writeChecks/mkDirs2"))
                c("webdav.mkDirs", labkey.webdav.mkDirs(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/writeChecks/mkDirs2/subdir/subdir2"))
                c("file.exists post", file.exists("%remoteDir%/writeChecks/mkDirs2/subdir/subdir2"))
                c("file.info.isdir", file.info("%remoteDir%/writeChecks/mkDirs2/subdir/subdir2")$isdir)
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "file.exists pre" "FALSE"
                [1] "webdav.mkDirs" "TRUE"
                [1] "file.exists post" "TRUE"
                [1] "file.info.isdir" "TRUE"
             ]]>
        </response>
    </test>
    <test name="webdav.put" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("remote file.exists pre", file.exists("%remoteDir%/writeChecks/putMe.txt"))
                c("webdav.put", labkey.webdav.put(localFile="%remoteDir%/readChecks/getMe.txt", baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/writeChecks/putMe.txt"))
                c("remote file.exists post", file.exists("%remoteDir%/writeChecks/putMe.txt"))
                c("remote file.info.size", file.info("%remoteDir%/writeChecks/putMe.txt")$size)
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "remote file.exists pre" "FALSE"
                [1] "webdav.put" "TRUE"
                [1] "remote file.exists post" "TRUE"
                [1] "remote file.info.size" "5"
             ]]>
        </response>
    </test>
    <test name="webdav.pathExists=TRUE" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("webdav.pathExists", labkey.webdav.pathExists(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks/getMe.txt"))
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "webdav.pathExists" "TRUE"
             ]]>
        </response>
    </test>
    <test name="webdav.pathExists=FALSE" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("webdav.pathExists", labkey.webdav.pathExists(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks/putMe.txt"))
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "webdav.pathExists" "FALSE"
             ]]>
        </response>
    </test>
    <test name="webdav.listDir" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("webdav.listDir.fileCount", labkey.webdav.listDir(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks")$fileCount)
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "webdav.listDir.fileCount" "3"
             ]]>
        </response>
    </test>
    <test name="webdav.listDir file" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("webdav.listDir", labkey.webdav.listDir(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks/getMe.txt"))
            ]]>
        </url>
        <response>
            <![CDATA[
                [[1]]
                [1] "webdav.listDir"
             ]]>
        </response>
    </test>
    <test name="webdav.listDir noexist" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("webdav.listDir", tryCatch({labkey.webdav.listDir(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks/noexist")},
                    error = function(e) {e$message}))
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "webdav.listDir"
                Status code = 404
             ]]>
        </response>
    </test>
    <test name="webdav.delete" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("remote file.exists pre", file.exists("%remoteDir%/writeChecks/deleteMe.txt"))
                c("webdav.delete", labkey.webdav.delete(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/writeChecks/deleteMe.txt"))
                c("remote file.exists post", file.exists("%remoteDir%/writeChecks/deleteMe.txt"))
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "remote file.exists pre" "TRUE"
                [1] "webdav.delete" "TRUE"
                [1] "remote file.exists post" "FALSE"
             ]]>
        </response>
    </test>
    <test name="webdav.delete empty directory" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("remote dir.exists pre", dir.exists("%remoteDir%/writeChecks/deleteMe_empty"))
                c("webdav.delete", labkey.webdav.delete(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/writeChecks/deleteMe_empty"))
                c("remote file.exists post", file.exists("%remoteDir%/writeChecks/deleteMe_empty"))
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "remote dir.exists pre" "TRUE"
                [1] "webdav.delete" "TRUE"
                [1] "remote file.exists post" "FALSE"
             ]]>
        </response>
    </test>
    <test name="webdav.delete directory" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("remote dir.exists pre", dir.exists("%remoteDir%/writeChecks/deleteMe"))
                c("webdav.delete", labkey.webdav.delete(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/writeChecks/deleteMe"))
                c("remote file.exists post", file.exists("%remoteDir%/writeChecks/deleteMe"))
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "remote dir.exists pre" "TRUE"
                [1] "webdav.delete" "TRUE"
                [1] "remote file.exists post" "FALSE"
             ]]>
        </response>
    </test>
    <test name="webdav.delete noexist" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("remote file.exists pre", file.exists("%remoteDir%/writeChecks/noexist.txt"))
                c("webdav.delete", tryCatch({labkey.webdav.delete(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/writeChecks/noexist.txt")},
                    error = function(e) {e$message}))
                c("remote file.exists post", file.exists("%remoteDir%/writeChecks/noexist.txt"))
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "remote file.exists pre" "FALSE"
                [1] "webdav.delete"
                Status code = 404
                [1] "remote file.exists post" "FALSE"
             ]]>
        </response>
    </test>
    <test name="webdav.downloadFolder" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("dir.exists", dir.exists("%downloadDir%/getMe"))
                c("dir.exists2", dir.exists("%downloadDir%/readChecks"))
                c("webdav.downloadFolder", labkey.webdav.downloadFolder(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks", localBaseDir="%downloadDir%"))
                c("dir.exists post", dir.exists("%downloadDir%/getMe"))
                c("dir.exists2 post", dir.exists("%downloadDir%/readChecks/getMe"))
                c("file.info.size a", file.info("%downloadDir%/readChecks/getMe/a.txt")$size)
                c("file.info.size b", file.info("%downloadDir%/readChecks/getMe/subdir/b.txt")$size)
                c("empty dir.exists", dir.exists("%downloadDir%/readChecks/getMe/empty_subdir"))
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "dir.exists" "FALSE"
                [1] "dir.exists2" "FALSE"
                [1] "webdav.downloadFolder" "TRUE"
                [1] "dir.exists post" "FALSE"
                [1] "dir.exists2 post" "TRUE"
                [1] "file.info.size a" "5"
                [1] "file.info.size b" "5"
                [1] "empty dir.exists" "TRUE"
             ]]>
        </response>
    </test>
    <test name="webdav.downloadFolder [overwriteFiles and !mergeFolders]" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                if (dir.exists("%downloadDir%/getMe")) {unlink("%downloadDir%/getMe", recursive = T)}
                c("dir.create", dir.create("%downloadDir%/getMe"))
                c("file.create", dir.create("%downloadDir%/getMe/newFile.txt"))
                c("webdav.downloadFolder", labkey.webdav.downloadFolder(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks/getMe", localBaseDir="%downloadDir%", overwriteFiles=TRUE, mergeFolders=FALSE))
                c("dir.exists post", dir.exists("%downloadDir%/getMe"))
                c("file.exists post", file.exists("%downloadDir%/getMe/newFile.txt"))
                c("file.info.size a", file.info("%downloadDir%/getMe/a.txt")$size)
                c("file.info.size b", file.info("%downloadDir%/getMe/subdir/b.txt")$size)
                c("empty dir.exists", dir.exists("%downloadDir%/getMe/empty_subdir"))
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "dir.create" "TRUE"
                [1] "webdav.downloadFolder" "TRUE"
                [1] "dir.exists post" "TRUE"
                [1] "file.exists post" "FALSE"
                [1] "file.info.size a" "5"
                [1] "file.info.size b" "5"
                [1] "empty dir.exists" "TRUE"
             ]]>
        </response>
    </test>
    <test name="webdav.downloadFolder [overwriteFiles and mergeFolders]" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("dir.create", dir.create("%downloadDir%/overwriteAndMerge/getMe/subdir", recursive=TRUE))
                c("file.create a", file.create("%downloadDir%/overwriteAndMerge/getMe/a.txt"))
                c("file.create c", file.create("%downloadDir%/overwriteAndMerge/getMe/subdir/c.txt"))
                c("webdav.downloadFolder", labkey.webdav.downloadFolder(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks/getMe", localBaseDir="%downloadDir%/overwriteAndMerge/", mergeFolders=TRUE, overwriteFiles=TRUE))
                c("dir.exists post", dir.exists("%downloadDir%/overwriteAndMerge/getMe"))
                c("file.info.size a", file.info("%downloadDir%/overwriteAndMerge/getMe/a.txt")$size)
                c("file.info.size b", file.info("%downloadDir%/overwriteAndMerge/getMe/subdir/b.txt")$size)
                c("file.info.size c", file.info("%downloadDir%/overwriteAndMerge/getMe/subdir/c.txt")$size)
                c("empty dir.exists", dir.exists("%downloadDir%/overwriteAndMerge/getMe/empty_subdir"))
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "dir.create" "TRUE"
                [1] "file.create a" "TRUE"
                [1] "file.create c" "TRUE"
                [1] "webdav.downloadFolder" "TRUE"
                [1] "dir.exists post" "TRUE"
                [1] "file.info.size a" "5"
                [1] "file.info.size b" "5"
                [1] "file.info.size c" "0"
                [1] "empty dir.exists" "TRUE"
             ]]>
        </response>
    </test>
    <test name="webdav.downloadFolder [!overwriteFiles and mergeFolders]" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("dir.create", dir.create("%downloadDir%/mergeNoOverwrite/getMe/subdir", recursive=TRUE))
                c("file.create a", file.create("%downloadDir%/mergeNoOverwrite/getMe/a.txt"))
                c("file.create c", file.create("%downloadDir%/mergeNoOverwrite/getMe/subdir/c.txt"))
                c("webdav.downloadFolder", labkey.webdav.downloadFolder(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks/getMe", localBaseDir="%downloadDir%/mergeNoOverwrite", mergeFolders=TRUE, overwriteFiles=FALSE))
                c("dir.exists post", dir.exists("%downloadDir%/mergeNoOverwrite/getMe"))
                c("file.info.size a", file.info("%downloadDir%/mergeNoOverwrite/getMe/a.txt")$size)
                c("file.info.size b", file.info("%downloadDir%/mergeNoOverwrite/getMe/subdir/b.txt")$size)
                c("file.info.size c", file.info("%downloadDir%/mergeNoOverwrite/getMe/subdir/c.txt")$size)
                c("empty dir.exists", dir.exists("%downloadDir%/mergeNoOverwrite/getMe/empty_subdir"))
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "dir.create" "TRUE"
                [1] "file.create a" "TRUE"
                [1] "file.create c" "TRUE"
                [1] "webdav.downloadFolder" "TRUE"
                [1] "dir.exists post" "TRUE"
                [1] "file.info.size a" "0"
                [1] "file.info.size b" "5"
                [1] "file.info.size c" "0"
                [1] "empty dir.exists" "TRUE"
             ]]>
        </response>
    </test>
    <test name="webdav.downloadFolder [!overwriteFiles and !mergeFolders]" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("dir.create", dir.create("%downloadDir%/noMergeNoOverwrite/getMe/subdir", recursive=TRUE))
                c("file.create a", file.create("%downloadDir%/noMergeNoOverwrite/getMe/a.txt"))
                c("file.create c", file.create("%downloadDir%/noMergeNoOverwrite/getMe/subdir/c.txt"))
                c("empty dir.exists pre", dir.exists("%downloadDir%/noMergeNoOverwrite/getMe/empty_subdir"))
                c("webdav.downloadFolder", labkey.webdav.downloadFolder(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks/getMe", localBaseDir="%downloadDir%/noMergeNoOverwrite", mergeFolders=FALSE, overwriteFiles=FALSE))
                c("dir.exists post", dir.exists("%downloadDir%/noMergeNoOverwrite/getMe"))
                c("file.info.size a", file.info("%downloadDir%/noMergeNoOverwrite/getMe/a.txt")$size)
                c("file.info.size b", file.info("%downloadDir%/noMergeNoOverwrite/getMe/subdir/b.txt")$size)
                c("file.info.size c", file.info("%downloadDir%/noMergeNoOverwrite/getMe/subdir/c.txt")$size)
                c("empty dir.exists post", dir.exists("%downloadDir%/noMergeNoOverwrite/getMe/empty_subdir"))
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "dir.create" "TRUE"
                [1] "file.create a" "TRUE"
                [1] "file.create c" "TRUE"
                [1] "empty dir.exists pre" "FALSE"
                [1] "webdav.downloadFolder" "FALSE"
                [1] "dir.exists post" "TRUE"
                [1] "file.info.size a" "0"
                [1] "file.info.size b" NA
                [1] "file.info.size c" "0"
                [1] "empty dir.exists post" "FALSE"
             ]]>
        </response>
    </test>
    <test name="webdav.downloadFolder [overwriteFiles and !mergeFolders]" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("dir.create", dir.create("%downloadDir%/overwriteNoMerge/getMe/oldDir", recursive=TRUE))
                c("file.create a", file.create("%downloadDir%/overwriteNoMerge/getMe/a.txt"))
                c("dir.create", dir.create("%downloadDir%/overwriteNoMerge/getMe/subdir", recursive=TRUE))
                c("file.create c", file.create("%downloadDir%/overwriteNoMerge/getMe/subdir/c.txt"))
                c("webdav.downloadFolder", labkey.webdav.downloadFolder(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks/getMe", localBaseDir="%downloadDir%/overwriteNoMerge", mergeFolders=FALSE, overwriteFiles=TRUE))
                c("dir.exists post", dir.exists("%downloadDir%/overwriteNoMerge/getMe"))
                c("file.info.size a", file.info("%downloadDir%/overwriteNoMerge/getMe/a.txt")$size)
                c("file.info.size b", file.info("%downloadDir%/overwriteNoMerge/getMe/subdir/b.txt")$size)
                c("empty dir.exists", dir.exists("%downloadDir%/overwriteNoMerge/getMe/empty_subdir"))
                c("file.exists c", file.exists("%downloadDir%/overwriteNoMerge/getMe/subdir/c.txt"))
                c("dir.exists oldDir", file.exists("%downloadDir%/overwriteNoMerge/getMe/oldDir"))
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "dir.create" "TRUE"
                [1] "file.create a" "TRUE"
                [1] "file.create c" "TRUE"
                [1] "webdav.downloadFolder" "TRUE"
                [1] "dir.exists post" "TRUE"
                [1] "file.info.size a" "5"
                [1] "file.info.size b" "5"
                [1] "empty dir.exists" "TRUE"
                [1] "file.exists c" "FALSE"
                [1] "dir.exists oldDir" "FALSE"
             ]]>
        </response>
    </test>
    <test name="webdav.downloadFolder missing file" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                c("file.exists pre", file.exists("%downloadDir%/noexist"))
                c("webdav.downloadFolder", tryCatch({labkey.webdav.downloadFolder(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath="remote/readChecks/noexist", localBaseDir="%downloadDir%", overwrite=TRUE)},
                    error = function(e) {e$message}))
                c("file.exists post", file.exists("%downloadDir%/noexist"))
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "file.exists pre" "FALSE"
                [1] "webdav.downloadFolder"
                [2] "HTTP request was unsuccessful. Status code = 404, Error message = Not Found"
                [1] "file.exists post" "FALSE"
             ]]>
        </response>
    </test>
    <test name="create directory with tricky characters" type="post">
        <url>
            <![CDATA[
                library(Rlabkey)
                dirName <- "TestDir-a%b#c&d@e~2"  #Add tricky characters
                c("remote file.exists pre", file.exists(paste0("%remoteDir%/writeChecks/", dirName)))
                c("webdav.mkDir", labkey.webdav.mkDir(baseUrl=labkey.url.base, folderPath="%projectName%", remoteFilePath=paste0("remote/writeChecks/", dirName)))
                c("remote file.exists post", file.exists(paste0("%remoteDir%/writeChecks/", dirName)))
                c("remote file.info.isdir", file.info(paste0("%remoteDir%/writeChecks/", dirName))$isdir)
            ]]>
        </url>
        <response>
            <![CDATA[
                [1] "remote file.exists pre" "FALSE"
                [1] "webdav.mkDir" "TRUE"
                [1] "remote file.exists post" "TRUE"
                [1] "remote file.info.isdir" "TRUE"
             ]]>
        </response>
    </test>
</ApiTests>
